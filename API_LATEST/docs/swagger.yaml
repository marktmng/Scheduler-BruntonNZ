basePath: /v1
definitions:
  controllers.ClientView:
    properties:
      client_code:
        type: string
      client_id:
        type: integer
      client_inactive:
        type: boolean
      client_name:
        type: string
      client_sequence:
        type: integer
    type: object
  controllers.LoginParam:
    properties:
      password:
        type: string
      user_code:
        type: string
    type: object
  controllers.PositionView:
    properties:
      position_code:
        type: string
      position_description:
        type: string
      position_id:
        type: integer
      position_inactive:
        type: boolean
      position_name:
        type: string
      position_sequence:
        type: integer
    type: object
  controllers.ProjectView:
    properties:
      client_code:
        type: string
      project_id:
        type: integer
      project_inactive:
        type: boolean
      project_name:
        type: string
      project_sequence:
        type: integer
    type: object
  controllers.RoomView:
    properties:
      room_id:
        type: integer
      room_inactive:
        type: boolean
      room_name:
        type: string
      room_sequence:
        type: integer
    type: object
  core.ModifyPwd:
    properties:
      new_pwd:
        type: string
      old_pwd:
        type: string
      user_code:
        type: string
    type: object
  core.UserDetails:
    properties:
      color_background:
        type: string
      color_text:
        type: string
      email_address:
        type: string
      has_confirmed_page:
        type: boolean
      has_posted_page:
        type: boolean
      has_recognised_page:
        type: boolean
      has_uploaded_page:
        type: boolean
      id:
        type: integer
      inactive:
        type: boolean
      online:
        type: boolean
      phone_no:
        type: string
      position_code:
        type: string
      role:
        type: string
      user_code:
        type: string
      user_name:
        type: string
    type: object
  core.UserDetailsWithPwd:
    properties:
      color_background:
        type: string
      color_text:
        type: string
      email_address:
        type: string
      has_confirmed_page:
        type: boolean
      has_posted_page:
        type: boolean
      has_recognised_page:
        type: boolean
      has_uploaded_page:
        type: boolean
      id:
        type: integer
      inactive:
        type: boolean
      password:
        type: string
      phone_no:
        type: string
      position_code:
        type: string
      role:
        type: string
      user_code:
        type: string
      user_name:
        type: string
    type: object
  core.UserPage:
    properties:
      CurrentPage:
        example: 1
        format: int
        type: integer
      ToltalPages:
        example: 1
        format: int
        type: integer
      ToltalUsers:
        example: 1
        format: int
        type: integer
      Users:
        items:
          $ref: '#/definitions/core.UserDetails'
        type: array
    type: object
  models.FTask:
    properties:
      clientCode:
        type: string
      description:
        type: string
      endDate:
        type: string
      hours:
        type: string
      projectName:
        type: string
      recEndDate:
        type: string
      recStartDate:
        type: string
      repeatable:
        type: string
      roomName:
        type: string
      startDate:
        type: string
      task_code:
        type: string
      title:
        type: string
      userCode:
        type: string
    type: object
  utils.JSONStruct:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API fot scheduler application
  title: Scheduler Test API
  version: 1.0.0
paths:
  /client:
    delete:
      description: delete client
      parameters:
      - description: client code
        in: query
        name: client_code
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - clients
    get:
      description: get client list
      parameters:
      - description: hide inactive clients
        in: query
        name: filter_inactive
        type: boolean
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ClientView'
              type: object
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - clients
    post:
      description: add or update client
      parameters:
      - description: client detail
        in: body
        name: clientDetail
        required: true
        schema:
          $ref: '#/definitions/controllers.ClientView'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - clients
  /position:
    delete:
      description: delete position
      parameters:
      - description: position code
        in: query
        name: position_code
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - positions
    get:
      description: get position list
      parameters:
      - description: hide inactive position
        in: query
        name: filter_inactive
        type: boolean
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/controllers.PositionView'
              type: object
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - positions
    post:
      description: add or update position
      parameters:
      - description: position detail
        in: body
        name: positionDetail
        required: true
        schema:
          $ref: '#/definitions/controllers.PositionView'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - positions
  /project:
    delete:
      description: delete project
      parameters:
      - description: client code
        in: query
        name: client_code
        required: true
        type: string
      - description: project name
        in: query
        name: project_name
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - projects
    get:
      description: get project list
      parameters:
      - description: hide inactive project
        in: query
        name: filter_inactive
        type: boolean
      - description: filter by client
        in: query
        name: client
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ProjectView'
              type: object
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - projects
    post:
      description: add or update project
      parameters:
      - description: project detail
        in: body
        name: projectDetail
        required: true
        schema:
          $ref: '#/definitions/controllers.ProjectView'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - projects
  /room:
    delete:
      description: delete room
      parameters:
      - description: room name
        in: query
        name: room_name
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - rooms
    get:
      description: get room list
      parameters:
      - description: hide inactive rooms
        in: query
        name: filter_inactive
        type: boolean
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/controllers.RoomView'
              type: object
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - rooms
    post:
      description: add or update room
      parameters:
      - description: room detail
        in: body
        name: roomDetail
        required: true
        schema:
          $ref: '#/definitions/controllers.RoomView'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - rooms
  /task/:
    get:
      description: get all Tasks
      parameters:
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: model or error message
          schema:
            items:
              $ref: '#/definitions/models.FTask'
            type: array
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
    post:
      description: create single/recurrent Task
      parameters:
      - description: body for user content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success post! or error message
          schema:
            type: string
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /task/:task_code:
    get:
      description: get task by task_code
      parameters:
      - description: The key for Task
        in: path
        name: task_code
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: model or task not exist
          schema:
            $ref: '#/definitions/models.FTask'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /task/taskDel/:task_code:
    delete:
      description: delete the task
      parameters:
      - description: The task_code you want to delete
        in: path
        name: task_code
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: delete success! or Task is empty
          schema:
            type: string
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /task/taskRecDel/:task_code:
    delete:
      description: delete recurrence by Task
      parameters:
      - description: The task_code you want to delete
        in: path
        name: task_code
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: delete success! or Task is empty
          schema:
            type: string
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /task/taskRecUpd/:task_code:
    post:
      description: update recurrence by Tasks (can receive FTask but will update only
        Title, Description and Location)
      parameters:
      - description: The task_code you want to update
        in: path
        name: task_code
        required: true
        type: string
      - description: body for task content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: model or error message
          schema:
            $ref: '#/definitions/models.FTask'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /task/taskUpd/:task_code:
    post:
      description: update the task
      parameters:
      - description: The task_code you want to update
        in: path
        name: task_code
        required: true
        type: string
      - description: body for task content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.FTask'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: model or task not exist
          schema:
            $ref: '#/definitions/models.FTask'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - tasks
  /user/addorupd:
    post:
      description: add or update user
      parameters:
      - description: user detail
        in: body
        name: userDetail
        required: true
        schema:
          $ref: '#/definitions/core.UserDetailsWithPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /user/delete:
    delete:
      description: delete user
      parameters:
      - description: user code
        in: query
        name: userCode
        required: true
        type: string
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /user/login:
    post:
      description: login with user_code and password
      parameters:
      - description: loginParam
        in: body
        name: loginParam
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginParam'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/core.UserDetailsWithPwd'
              type: object
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      tags:
      - users
  /user/rstpasswd:
    post:
      description: reset password
      parameters:
      - description: reset user password
        in: body
        name: ModifyPwd
        required: true
        schema:
          $ref: '#/definitions/core.ModifyPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /user/updpasswd:
    post:
      description: Modify password
      parameters:
      - description: modify user password
        in: body
        name: ModifyPwd
        required: true
        schema:
          $ref: '#/definitions/core.ModifyPwd'
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONStruct'
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /user/userlist:
    get:
      description: get user list
      parameters:
      - description: page index
        in: query
        name: pageindex
        required: true
        type: integer
      - description: page size
        in: query
        name: pagesize
        required: true
        type: integer
      - description: hide inactive users
        in: query
        name: filter_inactive
        type: boolean
      - description: With the bearer in front
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONStruct'
            - properties:
                data:
                  $ref: '#/definitions/core.UserPage'
              type: object
        "400":
          description: Bad Request
      security:
      - ApiKeyAuth: []
      tags:
      - users
schemes:
- http
- https
swagger: "2.0"
